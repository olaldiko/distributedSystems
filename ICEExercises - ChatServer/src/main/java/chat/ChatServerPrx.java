// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `chatServer.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package chat;

public interface ChatServerPrx extends Ice.ObjectPrx
{
    public boolean registerListener(ListenerPrx listenerInstance);

    public boolean registerListener(ListenerPrx listenerInstance, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_registerListener(ListenerPrx listenerInstance);

    public Ice.AsyncResult begin_registerListener(ListenerPrx listenerInstance, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_registerListener(ListenerPrx listenerInstance, Ice.Callback __cb);

    public Ice.AsyncResult begin_registerListener(ListenerPrx listenerInstance, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_registerListener(ListenerPrx listenerInstance, Callback_ChatServer_registerListener __cb);

    public Ice.AsyncResult begin_registerListener(ListenerPrx listenerInstance, java.util.Map<String, String> __ctx, Callback_ChatServer_registerListener __cb);

    public Ice.AsyncResult begin_registerListener(ListenerPrx listenerInstance, 
                                                  IceInternal.Functional_BoolCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_registerListener(ListenerPrx listenerInstance, 
                                                  IceInternal.Functional_BoolCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_registerListener(ListenerPrx listenerInstance, 
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_BoolCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_registerListener(ListenerPrx listenerInstance, 
                                                  java.util.Map<String, String> __ctx, 
                                                  IceInternal.Functional_BoolCallback __responseCb, 
                                                  IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                  IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_registerListener(Ice.AsyncResult __result);

    public boolean deleteListener(ListenerPrx listenerInstance);

    public boolean deleteListener(ListenerPrx listenerInstance, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx listenerInstance);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx listenerInstance, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx listenerInstance, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx listenerInstance, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx listenerInstance, Callback_ChatServer_deleteListener __cb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx listenerInstance, java.util.Map<String, String> __ctx, Callback_ChatServer_deleteListener __cb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx listenerInstance, 
                                                IceInternal.Functional_BoolCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx listenerInstance, 
                                                IceInternal.Functional_BoolCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx listenerInstance, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_BoolCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_deleteListener(ListenerPrx listenerInstance, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_BoolCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_deleteListener(Ice.AsyncResult __result);

    public void pushMessage(String message, ListenerPrx associatedListener);

    public void pushMessage(String message, ListenerPrx associatedListener, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pushMessage(String message, ListenerPrx associatedListener);

    public Ice.AsyncResult begin_pushMessage(String message, ListenerPrx associatedListener, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pushMessage(String message, ListenerPrx associatedListener, Ice.Callback __cb);

    public Ice.AsyncResult begin_pushMessage(String message, ListenerPrx associatedListener, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_pushMessage(String message, ListenerPrx associatedListener, Callback_ChatServer_pushMessage __cb);

    public Ice.AsyncResult begin_pushMessage(String message, ListenerPrx associatedListener, java.util.Map<String, String> __ctx, Callback_ChatServer_pushMessage __cb);

    public Ice.AsyncResult begin_pushMessage(String message, 
                                             ListenerPrx associatedListener, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_pushMessage(String message, 
                                             ListenerPrx associatedListener, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_pushMessage(String message, 
                                             ListenerPrx associatedListener, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_pushMessage(String message, 
                                             ListenerPrx associatedListener, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public void end_pushMessage(Ice.AsyncResult __result);

    public boolean getMessage(int msgNumber, Ice.StringHolder message);

    public boolean getMessage(int msgNumber, Ice.StringHolder message, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMessage(int msgNumber);

    public Ice.AsyncResult begin_getMessage(int msgNumber, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getMessage(int msgNumber, Ice.Callback __cb);

    public Ice.AsyncResult begin_getMessage(int msgNumber, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getMessage(int msgNumber, Callback_ChatServer_getMessage __cb);

    public Ice.AsyncResult begin_getMessage(int msgNumber, java.util.Map<String, String> __ctx, Callback_ChatServer_getMessage __cb);

    public interface FunctionalCallback_ChatServer_getMessage_Response
    {
        void apply(boolean __ret, String message);
    }

    public Ice.AsyncResult begin_getMessage(int msgNumber, 
                                            FunctionalCallback_ChatServer_getMessage_Response __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getMessage(int msgNumber, 
                                            FunctionalCallback_ChatServer_getMessage_Response __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_getMessage(int msgNumber, 
                                            java.util.Map<String, String> __ctx, 
                                            FunctionalCallback_ChatServer_getMessage_Response __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_getMessage(int msgNumber, 
                                            java.util.Map<String, String> __ctx, 
                                            FunctionalCallback_ChatServer_getMessage_Response __responseCb, 
                                            IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                            IceInternal.Functional_BoolCallback __sentCb);

    public boolean end_getMessage(Ice.StringHolder message, Ice.AsyncResult __result);
}
